  ]
  const safeTargets = (masters.targets && masters.targets.length>0) ? masters.targets : fallbackTargets
  const safeMethods = (masters.methods && masters.methods.length>0) ? masters.methods : fallbackMethods
  const [focusBoutId, setFocusBoutId] = useState<string>('')
  const [allowEncho, setAllowEncho] = useState<boolean>(true)
  const [allowHantei, setAllowHantei] = useState<boolean>(false)
  const [opMsg, setOpMsg] = useState<string|undefined>(undefined)
  const [savingId, setSavingId] = useState<string>('')

  useEffect(()=>{
    const init: Record<string, RowState> = {}
    for(const b of bouts){ init[b.id] = rows[b.id] ?? { left1:null, left2:null, right1:null, right2:null, leftFouls:0, rightFouls:0 } }
    setRows(init)
