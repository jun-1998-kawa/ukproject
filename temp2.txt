          {/* Top N selector removed for simplicity */}
          <Button onClick={()=> { setFrom(''); setTo(''); setTournamentFilter(''); setOfficialFilter('all') }}>{t('dashboard.clear')}</Button>
          <div className="no-print" style={{ display:'flex', gap:8 }}>
            <Button onClick={exportPlayers}>{t('export.players')||'選手一覧を出力 (CSV)'}</Button>
            <Button onClick={exportVsTeams}>{t('export.vsTeams')||'対戦校別を出力 (CSV)'}</Button>
            <Button onClick={exportTournaments}>{t('export.tournaments')||'大会別を出力 (CSV)'}</Button>
            <Button variation="link" onClick={()=> window.print()}>{t('export.print')||'印刷'}</Button>
            <Button onClick={()=> setYtOpen(true)}>{t('youtube.edit')||'YouTube再生リスト設定'}</Button>
          </div>
        </Flex>
      </View>

      {!teamId && (
        <View marginTop="0.75rem" color="#666">{t('dashboard.noData')}</View>
      )}

      {teamId && stat && (
        <View marginTop="0.75rem" style={{display:'grid', gridTemplateColumns:'repeat(2,minmax(0,1fr))', gap:12, minWidth:0}}>
          <View style={{gridColumn:'1 / -1', border:'1px solid #eee', borderRadius:8, padding:10, overflow:'hidden'}}>
            <Heading level={6}>{t('dashboard.stats')}</Heading>
            <div>{t('dashboard.bouts')}: <b>{stat.bouts}</b></div>
            <div>{t('dashboard.wins')}: <b>{stat.wins}</b> / {t('dashboard.losses')}: <b>{stat.losses}</b> / {t('dashboard.draws')}: <b>{stat.draws}</b></div>
            <div>{t('dashboard.pointsFor')}: <b>{stat.pf}</b> / {t('dashboard.pointsAgainst')}: <b>{stat.pa}</b> / {t('dashboard.diff')}: <b>{stat.diff>0?'+':''}{stat.diff}</b></div>
            <div>{t('dashboard.vsHentou')||'対変刀'}: <b>{(((stat as any).vsHentou?.winRate||0)*100).toFixed(1)}%</b> <span className="muted">({(stat as any).vsHentou?.wins||0}-{(stat as any).vsHentou?.losses||0}-{(stat as any).vsHentou?.draws||0} / {(stat as any).vsHentou?.bouts||0})</span></div>
          </View>

          <View style={{border:'1px solid #eee', borderRadius:8, padding:10, overflow:'hidden'}}>
            <Heading level={6}>{t('dashboard.pieFor')}</Heading>
            <div className="graph"><Pie items={(stat.topCombinedFor as any).map(([k,v]:[string,number])=> [labelTechniqueCombined(k), v])} /></div>
          </View>

          <View style={{border:'1px solid #eee', borderRadius:8, padding:10, overflow:'hidden'}}>
            <Heading level={6}>{t('dashboard.pieAgainst')}</Heading>
            <div className="graph"><Pie items={(stat.topCombinedAgainst as any).map(([k,v]:[string,number])=> [labelTechniqueCombined(k), v])} /></div>
          </View>

          {/* 対変刀は統計カードに集約するため、このセクションは削除 */}

          <View style={{gridColumn:'1 / -1', border:'1px solid #eee', borderRadius:8, padding:10, overflow:'hidden'}}>
            <Heading level={6}>{t('dashboard.vsOpponents') || 'Vs Teams'}</Heading>
            <View className="table-wrap">
            <Table variation="bordered" highlightOnHover>
              <TableHead>
                <TableRow>
                  <TableCell as="th">{t('dashboard.opponent') || 'Opponent'}</TableCell>
                  <TableCell as="th">{t('dashboard.bouts')}</TableCell>
                  <TableCell as="th">{t('dashboard.wins')}</TableCell>
                  <TableCell as="th">{t('dashboard.losses')}</TableCell>
                  <TableCell as="th">{t('dashboard.draws')}</TableCell>
                  <TableCell as="th">{t('dashboard.pointsFor')}</TableCell>
                  <TableCell as="th">{t('dashboard.pointsAgainst')}</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {(stat.vsTop as any).map(([oppId, v]:[string, any])=> (
                  <TableRow key={oppId}>
                    <TableCell>{universities[oppId] || oppId || '-'}</TableCell>
                    <TableCell>{v.bouts}</TableCell>
                    <TableCell>{v.wins}</TableCell>
                    <TableCell>{v.losses}</TableCell>
                    <TableCell>{v.draws}</TableCell>
                    <TableCell>{v.pf}</TableCell>
                    <TableCell>{v.pa}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
            </View>
          </View>

          {/* Match-level W/L/D and tournament ranking */}
          <View style={{gridColumn:'1 / -1', border:'1px solid #eee', borderRadius:8, padding:10, overflow:'hidden'}}>
            <Heading level={6}>{t('dashboard.matchSummary') || '試合結果'}</Heading>
            <View className="table-wrap">
            <Table variation="bordered" highlightOnHover>
              <TableHead>
                <TableRow>
                  <TableCell as="th">{t('dashboard.tournament')||'大会'}</TableCell>
                  <TableCell as="th">{t('dashboard.teamWins')||'チーム勝ち'}</TableCell>
                  <TableCell as="th">{t('dashboard.oppWins')||'相手勝ち'}</TableCell>
                  <TableCell as="th">{t('dashboard.draws')||'引分'}</TableCell>
                  <TableCell as="th">{i18n.language?.startsWith('ja') ? '結果' : 'Result'}</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {(matchStats?.rows||[]).map(r=> (
                  <TableRow key={r.id}>
                    <TableCell>
                      {r.tournament}
                      {r.tournament && ytMap[r.tournament] && (
                        <a href={ytMap[r.tournament]} target="_blank" rel="noopener noreferrer" style={{ marginLeft:8, fontSize:12 }}>?</a>
                      )}
                    </TableCell>
                    <TableCell>{r.teamWins}</TableCell>
                    <TableCell>{r.oppWins}</TableCell>
                    <TableCell>{r.draws}</TableCell>
                    <TableCell>{r.result}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
            </View>
          </View>

          <View style={{gridColumn:'1 / -1', border:'1px solid #eee', borderRadius:8, padding:10, overflow:'hidden'}}>
            <Heading level={6}>{t('dashboard.tournamentRanking') || '大会ランキング'}</Heading>
            <View className="table-wrap">
            <Table variation="bordered" highlightOnHover>
              <TableHead>
                <TableRow>
                  <TableCell as="th">#</TableCell>
                  <TableCell as="th">{t('dashboard.tournament')||'大会'}</TableCell>
                  <TableCell as="th">{t('dashboard.matches')||'試合数'}</TableCell>
                  <TableCell as="th">{t('dashboard.wins')||'勝'}</TableCell>
                  <TableCell as="th">{t('dashboard.losses')||'敗'}</TableCell>
                  <TableCell as="th">{t('dashboard.draws')||'分'}</TableCell>
                  <TableCell as="th">{t('dashboard.winRate')||'勝率'}</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {(matchStats?.ranking||[]).map((r, i)=> (
                  <TableRow key={r.name+String(i)}>
                    <TableCell>{i+1}</TableCell>
                    <TableCell>
                      {r.name}
                      {r.name && ytMap[r.name] && (
                        <a href={ytMap[r.name]} target="_blank" rel="noopener noreferrer" style={{ marginLeft:8, fontSize:12 }}>?</a>
                      )}
                    </TableCell>
                    <TableCell>{r.matches}</TableCell>
                    <TableCell>{r.wins}</TableCell>
                    <TableCell>{r.losses}</TableCell>
                    <TableCell>{r.draws}</TableCell>
                    <TableCell>{(r.winRate*100).toFixed(1)}%</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
            </View>
          </View>

          {/* Player contribution list */}
          <View style={{gridColumn:'1 / -1', border:'1px solid #eee', borderRadius:8, padding:10, overflow:'hidden'}}>
            <Heading level={6}>{t('dashboard.playerContribution')||'選手貢献'}</Heading>
            <View className="table-wrap">
            <Table variation="bordered" highlightOnHover>
              <TableHead>
                <TableRow>
                  <TableCell as="th">{t('dashboard.player')||'選手'}</TableCell>
                  <TableCell as="th">{t('dashboard.pointsFor')||'PF'}</TableCell>
                  <TableCell as="th">{t('dashboard.pointsAgainst')||'PA'}</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {playerContrib.map(p=> (
                  <TableRow key={p.playerId}>
                    <TableCell>{p.name}</TableCell>
                    <TableCell>{p.pf}</TableCell>
                    <TableCell>{p.pa}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
            </View>
          </View>
        </View>
      )}
      {/* Print styles */}
      <style>{`@media print { .no-print { display: none !important; } .app-sidebar { display:none !important } .app-main { padding: 0 !important } }`}</style>
      {ytOpen && (
        <div className="no-print" style={{ position:'fixed', inset:0, background:'rgba(0,0,0,0.35)', display:'flex', alignItems:'center', justifyContent:'center', zIndex:1200 }} onClick={()=> setYtOpen(false)}>
          <div style={{ background:'#fff', minWidth:360, maxWidth:780, width:'90%', padding:16, borderRadius:8 }} onClick={e=> e.stopPropagation()}>
            <Heading level={5}>{t('youtube.title')||'大会ごとのYouTube再生リスト'}</Heading>
            <div style={{ fontSize:12, color:'#555', marginTop:4 }}>{t('youtube.help')||'URLまたはプレイリストID（list=...）を入力してください。空にすると未設定になります。'}</div>
            <div style={{ display:'grid', gap:8, marginTop:12, maxHeight: '50vh', overflow:'auto' }}>
              {tournamentNames.length===0 ? (
                <div className="muted">{t('youtube.noTournaments')||'大会名がありません'}</div>
              ) : tournamentNames.map(name=> (
                <div key={name} style={{ display:'grid', gridTemplateColumns:'180px 1fr', gap:8, alignItems:'center' }}>
                  <div style={{ fontSize:13 }}>{name}</div>
                  <input value={ytMap[name]||''} onChange={e=> setYtMap(m=> ({...m, [name]: canonicalPlaylistUrl(e.target.value)}))} placeholder="https://www.youtube.com/playlist?list=..." style={{ width:'100%', padding:'6px 8px', fontSize:13 }} />
                </div>
              ))}
            </div>
            <div style={{ display:'flex', gap:8, justifyContent:'flex-end', marginTop:12 }}>
              <Button variation="link" onClick={()=> setYtOpen(false)}>{t('action.cancel')||'キャンセル'}</Button>
              <Button variation="primary" onClick={saveYt}>{t('actions.save')||'保存'}</Button>
            </div>
          </div>
        </div>
      )}
    </View>
  )
}








