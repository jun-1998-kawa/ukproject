                            <option value="">-</option>
                            <option value="our">{t('team.our')}</option>
                            <option value="opponent">{t('team.opponent')}</option>
                          </select>
                        )}
                        <Button size="small" onClick={()=> setBoutResult(b)} isDisabled={!resultEdit[b.id]?.winType && !b.winType}>{t('resultEditor.set')}</Button>
                      </>
                    )}
                  </div>
                </TableCell>
              </TableRow>
            )
          })}
        </TableBody>
      </Table>
    </View>
    {delModal?.open && (
      <div style={{ position:'fixed', inset:0, background:'rgba(0,0,0,0.35)', display:'flex', alignItems:'center', justifyContent:'center', zIndex:1200 }} onClick={()=> setDelModal(null)}>
        <div style={{ background:'#fff', minWidth:320, maxWidth:520, width:'90%', padding:16, borderRadius:8 }} onClick={e=> e.stopPropagation()}>
          <h4 style={{ marginTop:0 }}>{delModal.kind==='bout' ? t('confirm.deleteBoutTitle') : t('confirm.deleteMatchTitle')}</h4>
          <div style={{ color:'#444', marginBottom:12 }}>
            {delModal.kind==='bout' && (<>
              <div>{t('confirm.deleteBoutBody')}</div>
              <div style={{ fontSize:12, color:'#666' }}>{t('confirm.deleteBoutNote')}</div>
            </>)}
            {delModal.kind==='match' && (<>
              <div>{t('confirm.deleteMatchBody')}</div>
              <div style={{ fontSize:12, color:'#666' }}>{t('confirm.deleteMatchNote')}</div>
            </>)}
          </div>
          <div style={{ display:'flex', gap:8, justifyContent:'flex-end' }}>
            <Button onClick={()=> setDelModal(null)} variation="link">{t('action.cancel')||'Cancel'}</Button>
            <Button variation="warning" onClick={async()=>{
              try{
                if(delModal.kind==='bout' && delModal.bout){ await deleteBoutDeep(delModal.bout) }
                if(delModal.kind==='match'){ await deleteMatchDeep(delModal.targetId) }
                if(delModal.kind==='bout' && delModal.bout){ setBoutsLocal(prev=> prev.filter(x=> x.id!==delModal.bout!.id)); setRows(prev=> { const cp={...prev}; delete cp[delModal.bout!.id]; return cp }) }
                if(delModal.kind==='match'){ setBoutsLocal([]); setRows({}) }
                setDelModal(null); await onSaved()
              }catch(e){ alert(String(e)) }
            }}>{t('action.delete')||'Delete'}</Button>
          </div>
        </div>
      </div>
    )}
    </>
  )
}












