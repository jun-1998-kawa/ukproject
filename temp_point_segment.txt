queryField("listBoutsByMatch"),      idx("ourPlayerId").queryField("listBoutsByOurPlayer"),      idx("opponentPlayerId").queryField("listBoutsByOpponentPlayer"),    ])    .authorization((allow) => [      allow.groups(["ADMINS", "COACHES"]).to(["create", "update", "delete", "read"]),      allow.groups(["ANALYSTS", "VIEWERS"]).to(["read"]),    ]),  // --- Point-only logging (current operation) ---  Point: a    .model({      boutId: a.id().required(),      bout: a.belongsTo("Bout", "boutId"),      tSec: a.integer().required(), // 隧ｦ蜷茨ｿｽE逶ｸ蟇ｾ遘・      scorerPlayerId: a.id().required(),      scorer: a.belongsTo("Player", "scorerPlayerId"),      opponentPlayerId: a.id().required(),      opponent: a.belongsTo("Player", "opponentPlayerId"),      // Make target/methods optional to allow foul-only ippon      target: a.string(),      // Make target/methods optional to allow foul-only ippon      target: a.string(),      sequenceLen: a.integer(), // 1=蜊倡匱, 2=莠梧ｮｵ窶ｦ・ｽE・ｽ莉ｻ諢擾ｼ・      sequenceTargets: a.string().array(), // 萓・ ['KOTE','MEN']・ｽE・ｽEargetValues・ｽE・ｽE      isMutual: a.boolean(),      // 譁・・ｽ・ｽ      position: a.string(), // 蜈磯拠/荳ｭ蝣・螟ｧ蟆・・ｽ・ｽ・ｽE・ｽEositionValues 蜀鈴聞菫晄戟・ｽE・ｽE      scorerStanc
