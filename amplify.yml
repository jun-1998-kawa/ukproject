version: 1
backend:
  phases:
    build:
      commands:
        - npm ci --cache .npm --prefer-offline
        - |
          set -e
          echo "[backend] ampx version:" $(npx ampx --version || echo "(not available)")
          # If outputs already exist in repo, use them and exit
          if [ -s amplify_outputs.json ]; then
            echo "[backend] amplify_outputs.json found. Using committed outputs."
            exit 0
          fi
          echo "[backend] amplify_outputs.json not found. Will generate via App ID / Branch."
          # Resolve App ID
          APP_ID=""
          if [ -n "$BACKEND_APP_ID" ]; then APP_ID="$BACKEND_APP_ID";
          elif [ -n "$AMPLIFY_APP_ID" ]; then APP_ID="$AMPLIFY_APP_ID";
          elif [ -n "$AWS_APP_ID" ]; then APP_ID="$AWS_APP_ID"; fi
          BRANCH="${AWS_BRANCH:-$AMPLIFY_BRANCH}"
          echo "[backend] APP_ID='$APP_ID' BRANCH='$BRANCH'"
          if [ -z "$APP_ID" ] || [ -z "$BRANCH" ]; then
            echo "[backend] ERROR: APP_ID/BRANCH unresolved. Set BACKEND_APP_ID and ensure AWS_BRANCH (or AMPLIFY_BRANCH) is defined."
            exit 1
          fi
          echo "[backend] Generating outputs..."
          npx ampx generate outputs --app-id "$APP_ID" --branch "$BRANCH" --out-dir .
          ls -l amplify_outputs.json || { echo "[backend] ERROR: outputs generation did not create amplify_outputs.json"; exit 1; }
  artifacts:
    baseDirectory: .
    files:
      - amplify_outputs.json
frontend:
  phases:
    preBuild:
      commands:
        - npm --prefix web ci --cache web/.npm --prefer-offline
    build:
      commands:
        - npm --prefix web run build
  artifacts:
    baseDirectory: web/dist
    files:
      - '**/*'
  cache:
    paths:
      - web/.npm/**/*
      - web/node_modules/**/*
