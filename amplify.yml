version: 1
applications:
  # Backend app at repository root
  - appRoot: .
    backend:
      phases:
        build:
          commands:
            - npm ci --cache .npm --prefer-offline
            - |
              set -e
              # Resolve App ID (prefer explicit BACKEND_APP_ID)
              if [ -n "$BACKEND_APP_ID" ]; then APP_ID="$BACKEND_APP_ID";
              elif [ -n "$AMPLIFY_APP_ID" ]; then APP_ID="$AMPLIFY_APP_ID";
              else APP_ID="$AWS_APP_ID"; fi
              if [ -z "$APP_ID" ]; then echo "APP_ID unresolved. Set BACKEND_APP_ID in env vars."; exit 1; fi
              # Deploy backend (quiet)
              if ! npx ampx pipeline-deploy --app-id "$APP_ID" --branch "$AWS_BRANCH" >/dev/null 2>&1; then
                npx ampx push --app-id "$APP_ID" --branch "$AWS_BRANCH" >/dev/null 2>&1
              fi
              # If outputs already written by deploy, skip. Otherwise generate via app-id/branch
              if [ -s amplify_outputs.json ]; then
                echo "outputs ok"
              else
                npx ampx generate outputs --app-id "$APP_ID" --branch "$AWS_BRANCH" --outputs-version 1.4 --out-dir .
              fi
    artifacts:
      baseDirectory: .
      files:
        - amplify_outputs.json
    cache:
      paths:
        - .npm/**/*

  # Frontend app under web/
  - appRoot: web
    frontend:
      phases:
        preBuild:
          commands:
            - npm ci --cache .npm --prefer-offline
        build:
          commands:
            - npm run build
    artifacts:
      baseDirectory: dist
      files:
        - '**/*'
    cache:
      paths:
        - .npm/**/*
        - node_modules/**/*
