version: 1
backend:
  phases:
    build:
      commands:
        - node -v && npm -v
        - npm ci --cache .npm --prefer-offline
        - |
          # Avoid `set -u` which leaks into later phases and breaks RVM
          set -eo pipefail
          echo "[backend] AWS_BRANCH=${AWS_BRANCH}"
          echo "[backend] BACKEND_APP_ID=${BACKEND_APP_ID:-} AMPLIFY_APP_ID=${AMPLIFY_APP_ID:-} AWS_APP_ID=${AWS_APP_ID:-}"
          npx ampx --version || true
          # Resolve App ID (prefer explicit BACKEND_APP_ID)
          if [ -n "${BACKEND_APP_ID:-}" ]; then APP_ID="$BACKEND_APP_ID";
          elif [ -n "${AMPLIFY_APP_ID:-}" ]; then APP_ID="$AMPLIFY_APP_ID";
          else APP_ID="${AWS_APP_ID:-}"; fi
          if [ -z "$APP_ID" ]; then echo "APP_ID unresolved. Set BACKEND_APP_ID in env vars."; exit 1; fi
          # Deploy backend (show errors)
          npx ampx pipeline-deploy --debug --app-id "$APP_ID" --branch "$AWS_BRANCH"
          # If outputs already written by deploy, skip. Otherwise generate via app-id/branch
          if [ -s amplify_outputs.json ]; then
            echo "[backend] amplify_outputs.json already present"
          else
            npx ampx generate outputs --app-id "$APP_ID" --branch "$AWS_BRANCH" --outputs-version 1.4 --out-dir .
          fi
          # Reset any strict flags to avoid impacting frontend phases
          set +u || true
  artifacts:
    baseDirectory: .
    files:
      - amplify_outputs.json
frontend:
  phases:
    preBuild:
      commands:
        - . ~/.nvm/nvm.sh || true; nvm install 20 && nvm use 20
        - node -v && npm -v
        - |
          if [ -f amplify_outputs.json ]; then
            mkdir -p web/src
            cp -f amplify_outputs.json web/src/amplify_outputs.json
            echo "[frontend] Copied amplify_outputs.json to web/src"
          else
            echo "[frontend] amplify_outputs.json not found (backend phase may have failed)"; exit 1
          fi
        - npm ci --prefix web --cache .npm --prefer-offline
    build:
      commands:
        - . ~/.nvm/nvm.sh || true; nvm use 20
        - npm --prefix web run build
  artifacts:
    baseDirectory: web/dist
    files:
      - '**/*'
  cache:
    paths:
      - .npm/**/*
      - node_modules/**/*
      - web/node_modules/**/*
