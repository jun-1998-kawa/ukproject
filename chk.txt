        for(const p of (b.points?.items ?? [])){
          if(p.scorerPlayerId===playerId){
            pf++; opp.pf++; if(typeof p.tSec==='number') times.push(p.tSec)
            if(p.judgement==='HANSOKU') { combinedFor['HANSOKU']=(combinedFor['HANSOKU']||0)+1; continue }
            const key = buildTechniqueKey(p.target||'', p.methods||[])
            combinedFor[key] = (combinedFor[key]||0)+1
            if(p.target) targetOnlyFor[p.target] = (targetOnlyFor[p.target]||0)+1
            if(p.recordedAt){ const h = new Date(p.recordedAt).getHours(); if(!Number.isNaN(h)) hoursFor[h]++ }
            if(typeof p.tSec==='number') incBin(tForBins, p.tSec)
          } else if(p.scorerPlayerId && (p.scorerPlayerId!==playerId)){
            pa++; opp.pa++
            if(p.judgement==='HANSOKU') combinedAgainst['HANSOKU'] = (combinedAgainst['HANSOKU']||0)+1
            else {
              const key = buildTechniqueKey(p.target||'', p.methods||[])
              combinedAgainst[key] = (combinedAgainst[key]||0)+1
              if(p.target) targetOnlyAgainst[p.target] = (targetOnlyAgainst[p.target]||0)+1
            }
